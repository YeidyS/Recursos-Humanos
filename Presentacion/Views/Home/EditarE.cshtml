@model CapaEntidad.EmpleadoCE

@{
    ViewBag.Title = "EditarE";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>EditarE</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Empleado</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @*@Html.LabelFor(model => model.CodEmpl, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CodEmpl, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CodEmpl, "", new { @class = "text-danger" })*@
        @*</div>*@

        <label class="control-label col-md-2">Codido del Empleado</label>
        <div class="col-md-10">
            <input type="text" class="form-control" name="CodEmpl" value="@Model.CodEmpl" />
        </div>
    </div>

    <div class="form-group">
        @*@Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
        </div>*@
        <label class="control-label col-md-2">Nombre</label>
        <div class="col-md-10">
            <input type="text" class="form-control" name="Nombre" value="@Model.Nombre" />
        </div>
    </div>

    <div class="form-group">
        @*@Html.LabelFor(model => model.Apellido, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Apellido, "", new { @class = "text-danger" })
        </div>*@
        <label class="control-label col-md-2">Apellido</label>
        <div class="col-md-10">
            <input type="text" class="form-control" name="Apellido" value="@Model.Apellido"  />
        </div>
    </div>

    <div class="form-group">
        @*@Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
        </div>*@
        <label class="control-label col-md-2">Telefono</label>
        <div class="col-md-10">
            <input type="text" class="form-control" name="Telefono" value="@Model.Telefono" />
        </div>
    </div>

        <div class="form-group">           
            <label class="control-label col-md-2">Departamento</label>
            <div class="col-md-10">
                <select class="form-control" id="Departamento" name="Departamento"></select>
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Cargo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Cargo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Cargo, "", new { @class = "text-danger" })
                </div>*@
            <label class="control-label col-md-2">Cargo</label>
            <div class="col-md-10">
                <select class="form-control" id="Cargo" name="Cargo"></select>
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.FechaIngreso, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FechaIngreso, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FechaIngreso, "", new { @class = "text-danger" })
        </div>*@
            <label class="control-label col-md-2">FechaIngreso</label>
            <div class="col-md-10">
                <input type="text" class="form-control" name="FechaIngreso" value="@Model.FechaIngreso"  />
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Salario, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Salario, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Salario, "", new { @class = "text-danger" })
        </div>*@
            <label class="control-label col-md-2">Salario</label>
            <div class="col-md-10">
                <input type="text" class="form-control" name="Salario" value="@Model.Salario" />
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Estatus, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Estatus, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Estatus, "", new { @class = "text-danger" })
        </div>*@
            <label class="control-label col-md-2">Estatus</label>
            <div class="col-md-10">
                <input type="text" class="form-control" name="Estatus" value="@Model.Estatus" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Regresar", "Details")
</div>
@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        getData();
        getData1();
        function getData() {
            $.ajax({
                type: "GET",
                url: '/home/getdepartamentos',
                dataType: "json",
                success: function (result) {
                    $.each(result.data, function (key, item) {
                        $("#Departamento").append('<option value=' + item.Id + '>' + item.Nombre + '</option>');
                    });
                },
                error: function (data) {
                    alert('error');
                }
            });
        }

        function getData1() {
            $.ajax({
                type: "GET",
                url: '/home/getcargos',
                dataType: "json",
                success: function (result) {
                    $.each(result.data, function (key, item) {
                        $("#Cargo").append('<option value=' + item.Id + '>' + item.Cargo1 + '</option>');
                    });
                },
                error: function (data) {
                    alert('error');
                }
            });
        }
    </script>
}